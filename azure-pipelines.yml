# Azure Pipelines YAML file

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: Build
  displayName: 'Build Docker Image'
  steps:
  - checkout: self

  # Add your Docker build steps here...

  - task: Docker@2
    inputs:
      containerRegistry: 'yourContainerRegistryServiceConnection'
      repository: 'your-image-name'
      command: 'build'
      Dockerfile: '**/Dockerfile'

  - task: Docker@2
    inputs:
      containerRegistry: 'yourContainerRegistryServiceConnection'
      repository: 'your-image-name'
      command: 'push'

- job: DownloadArtifact
  displayName: 'Download Artifact'
  dependsOn: Build
  steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      buildType: 'current'
      artifactName: 'drop'
      downloadPath: '/home/vsts/work/1/s' # Specify the target directory

- job: Deploy
  displayName: 'Deploy to AKS'
  dependsOn: DownloadArtifact
  variables:
    KUBE_CONFIG_MAP_NAME: 'your-aks-cluster-config-map'
  steps:
  - script: |
      echo "##vso[task.setvariable variable=KUBE_CONFIG_DATA]$(az aks get-credentials --resource-group your-resource-group --name your-aks-cluster --overwrite-existing --output json)"
      kubectl apply -f <(echo $KUBE_CONFIG_DATA | base64 --decode)
    displayName: 'Get AKS Cluster Credentials'

  - script: |
      kubectl set image deployment/your-deployment-name your-container-name=yourContainerRegistry.azurecr.io/your-image-name:$(Build.BuildId)
    displayName: 'Update Deployment with New Image'
